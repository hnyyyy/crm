<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.crm.mapper.StorageMapper">

	<sql id="chanceQueryCondition">
			<where>
			<if test="productName!=null and productName!='%%'">
				and p.name LIKE #{productName}
			</if>
			
			<if test="wareHouse!=null and wareHouse!='%%'">
				and ware_house LIKE #{wareHouse}
			</if>
			
			</where>
			
	</sql>
	
	<select id="getTotalElements" resultType="long">
		SELECT count(s.id) FROM storages s LEFT OUTER JOIN products p ON s.product_id=p.id
		<include refid="chanceQueryCondition"/>
	</select>
	
	<select id="getContent" resultType="com.atguigu.crm.entity.Storage">
		SELECT *
		FROM(
			SELECT rownum rn, s.id,p.name as "product.name",ware_house as "wareHouse",stock_ware,stock_count,s.memo
			FROM storages s
			LEFT OUTER JOIN products p
			ON s.product_id=p.id 
			<include refid="chanceQueryCondition"/>
		) a
		<![CDATA[
		WHERE rn >= #{fromIndex} AND rn < #{endIndex}
		]]>
	</select>

	<select id="save">
		INSERT INTO storages(id,memo,ware_house,stock_ware,stock_count,product_id) VALUES(crm_seq.nextval,#{memo},
		#{wareHouse},#{stockWare},#{stockCount},#{product.id})
	</select>
	
	<select id="getStorageById" resultType="com.atguigu.crm.entity.Storage">
		SELECT s.id,s.memo,ware_house,stock_ware,stock_count,p.name as "product.name",p.id as "product.id"
		FROM storages s
		LEFT OUTER JOIN products p
		ON s.product_id=p.id 
		WHERE s.id=#{id}
	</select>
	
	<update id="update">
		UPDATE storages SET stock_count=#{stockCount} WHERE id=#{id}
	</update>
	
	<delete id="delete">
		DELETE FROM storages WHERE id=#{id}
	</delete>

</mapper>